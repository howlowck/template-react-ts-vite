name: 'CICD'

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: tplreact-prod # CHANGE ME
  AZURE_WEBAPP_PACKAGE_PATH: './'
  NODE_VERSION: '14.x'

jobs:
  terraform-plan-prod:
    name: 'Terraform Plan Prod'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      ARM_THREEPOINTZERO_BETA_RESOURCES: 'true'
    runs-on: ubuntu-latest
    environment: prod

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - run: >-
          terraform init
          -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}"
          -backend-config="container_name=${{ secrets.TF_BACKEND_STORAGE_CONTAINER }}"
          -backend-config="key=${{ secrets.TF_BACKEND_STORAGE_KEY }}"
          -backend-config="resource_group_name=${{ secrets.TF_BACKEND_STORAGE_RESOURCE_GROUP }}"

      - run: terraform validate

      - run: >-
          terraform plan
          -no-color
          -out=prod.tfplan

      - run: terraform apply -auto-approve prod.tfplan
  build-and-deploy:
    name: 'Build and Deploy App'
    runs-on: ubuntu-latest
    needs: terraform-plan-prod
    environment: prod
    steps:
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: npm install, build, and test
        run: |
          npm ci
          npm run build --if-present
        working-directory: ./
      # deploy web app using Azure credentials
      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      # Azure logout
      - name: logout
        run: |
          az logout
